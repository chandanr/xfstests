#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2020 Chandan Babu R.  All Rights Reserved.
#
# FS QA Test 531
#
# Execute fsstress with bmap_alloc_minlen_extent error tag enabled.
#
seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/inject

# remove previous $seqres.full before test
rm -f $seqres.full

# real QA test starts here

_supported_fs xfs
_require_scratch
_require_xfs_debug
_require_test_program "punch-alternating"
_require_xfs_io_error_injection "bmap_alloc_minlen_extent"

echo "Format and mount fs"
_scratch_mkfs_sized $((1024 * 1024 * 1024)) >> $seqres.full
_scratch_mount >> $seqres.full

bsize=$(_get_block_size $SCRATCH_MNT)

testfile=$SCRATCH_MNT/testfile

echo "Consume free space"
dd if=/dev/zero of=${testfile} bs=${bsize} >> $seqres.full 2>&1
sync

echo "Create fragmented filesystem"
$here/src/punch-alternating $testfile >> $seqres.full
sync

echo "Inject bmap_alloc_minlen_extent error tag"
xfs_io -x -c 'inject bmap_alloc_minlen_extent' $SCRATCH_MNT

echo "Execute fsstress in background"
$FSSTRESS_PROG -d $SCRATCH_MNT -p128 -n999999999 \
		 -f bulkstat=0 \
		 -f bulkstat1=0 \
		 -f fiemap=0 \
		 -f getattr=0 \
		 -f getdents=0 \
		 -f getfattr=0 \
		 -f listfattr=0 \
		 -f mread=0 \
		 -f read=0 \
		 -f readlink=0 \
		 -f readv=0 \
		 -f stat=0 \
		 -f aread=0 \
		 -f dread=0 > /dev/null 2>&1 &

fsstress_pid=$!
sleep 2m

echo "Killing fsstress process $fsstress_pid ..." >> $seqres.full
kill $fsstress_pid >> $seqres.full
wait $fsstress_pid

# success, all done
status=0
exit
