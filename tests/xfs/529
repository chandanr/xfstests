#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2020 YOUR NAME HERE.  All Rights Reserved.
#
# FS QA Test 529
#
# what am I here for?
#
seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/inject

# remove previous $seqres.full before test
rm -f $seqres.full

# real QA test starts here

_supported_fs xfs
_require_scratch
_require_xfs_debug
_require_xfs_io_error_injection "reduce_max_iextents"

echo "* Swap extent forks"

echo "Format and mount fs"
_scratch_mkfs >> $seqres.full
_scratch_mount >> $seqres.full

bsize=$(_get_block_size $SCRATCH_MNT)

srcfile=${SCRATCH_MNT}/srcfile
donorfile=${SCRATCH_MNT}/donorfile

echo "Create \$donorfile having an extent of length 17 blocks"
xfs_io -f -c "pwrite -b $((17 * bsize)) 0 $((17 * bsize))" -c fsync $donorfile \
       >> $seqres.full

# After the for loop the donor file will have the following extent layout
# | 0-4 | 5 | 6 | 7 | 8 | 9 | 10 |
echo "Fragment \$donorfile"
for i in $(seq 5 10); do
	start_offset=$((i * bsize))
	xfs_io -f -c "fcollapse $start_offset $bsize" $donorfile >> $seqres.full
done
donorino=$(stat -c "%i" $donorfile)

echo "Create \$srcfile having an extent of length 18 blocks"
xfs_io -f -c "pwrite -b $((18 * bsize)) 0 $((18 * bsize))" -c fsync $srcfile \
       >> $seqres.full

echo "Fragment \$srcfile"
# After the for loop the src file will have the following extent layout
# | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7-10 |
for i in $(seq 1 7); do
	start_offset=$((i * bsize))
	xfs_io -f -c "fcollapse $start_offset $bsize" $srcfile >> $seqres.full
done
srcino=$(stat -c "%i" $srcfile)

_scratch_unmount >> $seqres.full

echo "Collect \$donorfile's extent count"
donor_nr_exts=$(_scratch_get_iext_count $donorino data)

echo "Collect \$srcfile's extent count"
src_nr_exts=$(_scratch_get_iext_count $srcino data)

_scratch_mount >> $seqres.full

echo "Inject reduce_max_iextents error tag"
xfs_io -x -c 'inject reduce_max_iextents' $SCRATCH_MNT

echo "Swap \$srcfile's and \$donorfile's extent forks"
xfs_io -f -c "swapext $donorfile" $srcfile >> $seqres.full 2>&1

_scratch_unmount >> $seqres.full

echo "Check for \$donorfile's extent count overflow"
nextents=$(_scratch_get_iext_count $donorino data)
if (( $nextents == $src_nr_exts )); then
	echo "\$donorfile: Extent count overflow check failed"
fi

echo "Check for \$srcfile's extent count overflow"
nextents=$(_scratch_get_iext_count $srcino data)
if (( $nextents == $donor_nr_exts )); then
	echo "\$srcfile: Extent count overflow check failed"
fi

# success, all done
status=0
exit
